name: Build ticker dredge_heds.json

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 * * * *"  # run every 15 minutes

permissions:
  contents: write

concurrency:
  group: ticker-publish
  cancel-in-progress: true

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps (ticker)
        working-directory: ./
        run: |
          python -m pip install --upgrade pip
          if [[ -f scripts/requirements-ticker.txt ]]; then
            pip install -r scripts/requirements-ticker.txt
          elif [[ -f requirements.txt ]]; then
            pip install -r requirements.txt
          else
            pip install feedparser requests python-dateutil beautifulsoup4
          fi

      - name: Ensure output directory exists
        run: |
          mkdir -p newsriver/newsriver

      - name: Build ticker JSON (fetch_tickerlines.py)
        run: |
          # Script lives at repo-root/scripts; headlines.json is at repo root.
          python scripts/fetch_tickerlines.py \
            --in ./headlines.json \
            --out ./newsriver/newsriver/dredge_heds.json

      - name: Validate dredge_heds.json
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const core = require('@actions/core');

            const p = 'newsriver/newsriver/dredge_heds.json';
            if (!fs.existsSync(p)) core.setFailed(`ERROR: ${p} not found`);

            const data = JSON.parse(fs.readFileSync(p, 'utf8'));
            const items = Array.isArray(data?.items) ? data.items : [];
            if (!Array.isArray(items)) core.setFailed('ERROR: items is not a list');
            if (items.length < 3) core.setFailed(`ERROR: items has length ${items.length} (<3). Abort publish.`);

            for (let i = 0; i < items.length; i++) {
              const it = items[i] || {};
              const url = typeof it.url === 'string' ? it.url.trim() : '';
              const title = (it.display || it.text || it.hyped || it.title || '').trim();
              if (!url) core.setFailed(`ERROR: item ${i} missing valid url`);
              if (!title) core.setFailed(`ERROR: item ${i} missing display/text/title`);
            }
            core.info('Validation OK: dredge_heds.json');

      - name: Commit and push if changed
        run: |
          set -e
          git config user.name  "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add newsriver/newsriver/dredge_heds.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
            git commit -m "ticker: update dredge_heds.json [ci skip]"
            git push
          fi
