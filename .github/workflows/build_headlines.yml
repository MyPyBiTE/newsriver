name: Build & publish headlines.json

on:
  workflow_dispatch:
  schedule:
    - cron: "*/12 * * * *"  # every 12 minutes

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 12
    env:
      # Collector caps (collect plenty, then filter hard)
      MPB_MAX_PER_FEED: "14"
      MPB_MAX_TOTAL: "320"

      # Time + budgets
      MPB_HTTP_TIMEOUT: "10"
      MPB_SLOW_FEED_WARN: "3.5"
      MPB_GLOBAL_BUDGET: "210"
      NEWSRIVER_TIMEZONE: "America/Toronto"
      MPB_BREAKER_LIMIT: "3"

      # Recency + exact publish count
      MPB_MAX_AGE_HOURS: "69"
      MPB_MIN_AGE_SEC: "60"
      MPB_REQUIRE_EXACT_COUNT: "69"

      # Strict link verification + article heuristics
      MPB_VERIFY_LINKS: "1"
      MPB_REJECT_REDIRECT_TO_HOMEPAGE: "1"
      MPB_BLOCK_AGGREGATORS: "1"
      MPB_MIN_BODY_BYTES: "4096"
      MPB_MIN_ARTICLE_WORDS: "120"

      # Safety net
      MPB_FALLBACK_MIN_ITEMS: "1"
      MPB_FALLBACK_MAX_AGE_HOURS: "24"

      # Realistic UA
      MPB_ALT_UA: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/124.0 Safari/537.36"

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed for rebase/push
          persist-credentials: true

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install tools (jq + curl)
        run: |
          sudo apt-get update
          sudo apt-get install -y jq curl

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install feedparser requests beautifulsoup4 json5

      - name: Guardrail â€” strip embedded README block if present
        shell: bash
        run: |
          set -euo pipefail
          if grep -n '^readme = """' scripts/fetch_headlines.py >/dev/null 2>&1; then
            echo ">> Stripping embedded README block from scripts/fetch_headlines.py"
            sed -i '/^readme = """/,$d' scripts/fetch_headlines.py
          fi

      - name: Syntax check
        run: python -m py_compile scripts/fetch_headlines.py

      - name: Build headlines.json
        run: |
          set -euo pipefail
          mkdir -p newsriver
          python scripts/fetch_headlines.py --feeds-file feeds.txt --out newsriver/headlines.json
          echo "----- basic check"
          jq -r '.generated_utc, .count' newsriver/headlines.json
          echo "----- verification stats"
          jq -r '._debug.sanity_stats' newsriver/headlines.json
          echo "----- sample URLs"
          jq -r '.items[:10][] | [.published_utc, .source, .title, .url] | @tsv' newsriver/headlines.json

      - name: Post-verify HTTP probe (fail on home/soft-404)
        shell: bash
        run: |
          set -euo pipefail
          TMPLOG=probe.log
          : > "$TMPLOG"
          jq -r '.items[:80][] | .url' newsriver/headlines.json | while read -r URL; do
            echo ">> Probing: $URL" | tee -a "$TMPLOG"
            CODE=$(curl -A "$MPB_ALT_UA" -L -m 15 -s -w '%{http_code}' -o /tmp/body.html "$URL")
            BYTES=$(wc -c </tmp/body.html | tr -d ' ')
            if [ "$CODE" -lt 200 ] || [ "$CODE" -ge 300 ]; then
              echo "!! Non-2xx ($CODE): $URL" | tee -a "$TMPLOG"; exit 1
            fi
            if [ "$BYTES" -lt 3500 ]; then
              echo "!! Too small body ($BYTES bytes): $URL" | tee -a "$TMPLOG"; exit 1
            fi
            if ! grep -qiE '<(article|meta|title|div|p)[ >]' /tmp/body.html; then
              echo "!! Not HTML-like content: $URL" | tee -a "$TMPLOG"; exit 1
            fi
          done
          echo "All probes passed."

      - name: Upload artifact (json + probe log)
        uses: actions/upload-artifact@v4
        with:
          name: headlines-and-probe
          path: |
            newsriver/headlines.json
            probe.log

      - name: Commit & push with rebase (handles non-fast-forward)
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add newsriver/headlines.json
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "ci: update headlines.json"
          for i in 1 2 3; do
            git fetch origin main
            git pull --rebase origin main
            if git push origin HEAD:main; then
              echo "Pushed successfully."
              exit 0
            fi
            echo "Push failed, retrying ($i/3)..."
            sleep $((i * 5))
          done
          echo "Push failed after retries."
          exit 1
